import { subscribe } from '@nextcloud/event-bus';

const tokenElement = document.getElementsByTagName('head')[0];
let token = tokenElement ? tokenElement.getAttribute('data-requesttoken') : null;
const observers = [];
function getRequestToken() {
    return token;
}
function onRequestTokenUpdate(observer) {
    observers.push(observer);
}
// Listen to server event and keep token in sync
subscribe('csrf-token-update', e => {
    token = e.token;
    observers.forEach(observer => {
        try {
            observer(e.token);
        }
        catch (e) {
            console.error('error updating CSRF token observer', e);
        }
    });
});

/// <reference types="@nextcloud/typings" />
const getAttribute = (el, attribute) => {
    if (el) {
        return el.getAttribute(attribute);
    }
    return null;
};
const head = document.getElementsByTagName('head')[0];
const uid = getAttribute(head, 'data-user');
const displayName = getAttribute(head, 'data-user-displayname');
const isAdmin = (typeof OC === 'undefined')
    ? false
    : OC.isUserAdmin();
function getCurrentUser() {
    if (uid === null) {
        return null;
    }
    return {
        uid,
        displayName,
        isAdmin,
    };
}

export { getCurrentUser, getRequestToken, onRequestTokenUpdate };
//# sourceMappingURL=index.esm.js.map

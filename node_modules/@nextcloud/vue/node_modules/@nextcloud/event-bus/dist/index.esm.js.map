{"version":3,"file":"index.esm.js","sources":["../lib/ProxyBus.ts","../lib/SimpleBus.ts","../lib/index.ts"],"sourcesContent":["import valid from \"semver/functions/valid.js\";\nimport major from \"semver/functions/major.js\";\n\nimport { Event } from \"./Event.js\";\nimport { EventBus } from \"./EventBus.js\";\nimport { EventHandler } from \"./EventHandler.js\";\n\nexport class ProxyBus implements EventBus {\n\n    private bus: EventBus;\n\n    constructor(bus: EventBus) {\n        if (typeof bus.getVersion !== 'function' || !valid(bus.getVersion())) {\n            console.warn('Proxying an event bus with an unknown or invalid version')\n        } else if (major(bus.getVersion()) !== major(this.getVersion())) {\n            console.warn('Proxying an event bus of version ' + bus.getVersion() + ' with ' + this.getVersion())\n        }\n\n        this.bus = bus;\n    }\n\n    getVersion(): string {\n        return globalThis.__pkg_version;\n    }\n\n    subscribe(name: string, handler: EventHandler): void {\n        this.bus.subscribe(name, handler);\n    }\n\n    unsubscribe(name: string, handler: EventHandler): void {\n        this.bus.unsubscribe(name, handler);\n    }\n\n    emit(name: string, event: Event): void {\n        this.bus.emit(name, event);\n    }\n\n}\n","import { Event } from \"./Event.js\";\nimport { EventBus } from \"./EventBus.js\";\nimport { EventHandler } from \"./EventHandler.js\";\n\nexport class SimpleBus implements EventBus {\n\n    private handlers = new Map<string, EventHandler[]>();\n\n    getVersion(): string {\n      return globalThis.__pkg_version;\n    }\n\n    subscribe(name: string, handler: EventHandler): void {\n        this.handlers.set(name, (this.handlers.get(name) || []).concat(handler));\n    }\n\n    unsubscribe(name: string, handler: EventHandler): void {\n        this.handlers.set(name, (this.handlers.get(name) || []).filter(h => h != handler));\n    }\n\n    emit(name: string, event: Event): void {\n        (this.handlers.get(name) || []).forEach(h => {\n            try {\n                h(event)\n            } catch (e) {\n                console.error('could not invoke event listener', e)\n            }\n        })\n    }\n\n}\n","import { EventBus } from \"./EventBus\"\nimport { ProxyBus } from \"./ProxyBus\"\nimport { SimpleBus } from \"./SimpleBus\"\n\nexport type { EventBus } from './EventBus'\nexport type { EventHandler } from \"./EventHandler\";\nexport type { Event } from \"./Event\";\n\nexport { ProxyBus } from \"./ProxyBus\"\nexport { SimpleBus } from \"./SimpleBus\";\n\ndeclare global {\n  interface Window {\n    OC: any;\n    _nc_event_bus: any;\n  }\n}\n\nfunction getBus(): EventBus {\n    if ((typeof window.OC !== 'undefined') && window.OC._eventBus && typeof window._nc_event_bus === 'undefined') {\n        console.warn('found old event bus instance at OC._eventBus. Update your version!')\n        window._nc_event_bus = window.OC._eventBus\n    }\n\n    // Either use an existing event bus instance or create one\n    if (typeof window._nc_event_bus !== 'undefined') {\n        return new ProxyBus(window._nc_event_bus)\n    } else {\n        return window._nc_event_bus = new SimpleBus()\n    }\n}\n\nconst bus = getBus()\n\n/**\n * Register an event listener\n *\n * @param name name of the event\n * @param handler callback invoked for every matching event emitted on the bus\n */\nexport function subscribe(name: string, handler: (string) => void): void {\n    bus.subscribe(name, handler)\n}\n\n/**\n * Unregister a previously registered event listener\n *\n * Note: doesn't work with anonymous functions (closures). Use method of an object or store listener function in variable.\n *\n * @param name name of the event\n * @param handler callback passed to `subscribed`\n */\nexport function unsubscribe(name: string, handler: (string) => void): void {\n    bus.unsubscribe(name, handler)\n}\n\n/**\n * Emit an event\n *\n * @param name name of the event\n * @param event event payload\n */\nexport function emit(name: string, event: object): void {\n    bus.emit(name, event)\n}\n"],"names":[],"mappings":";;;MAOa,QAAQ,CAAA;AAET,IAAA,GAAG,CAAW;AAEtB,IAAA,WAAA,CAAY,GAAa,EAAA;AACrB,QAAA,IAAI,OAAO,GAAG,CAAC,UAAU,KAAK,UAAU,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE;AAClE,YAAA,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAA;AAC3E,SAAA;AAAM,aAAA,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;AAC7D,YAAA,OAAO,CAAC,IAAI,CAAC,mCAAmC,GAAG,GAAG,CAAC,UAAU,EAAE,GAAG,QAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,CAAA;AACtG,SAAA;AAED,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAClB;IAED,UAAU,GAAA;QACN,OAAO,OAAwB,CAAC;KACnC;IAED,SAAS,CAAC,IAAY,EAAE,OAAqB,EAAA;QACzC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KACrC;IAED,WAAW,CAAC,IAAY,EAAE,OAAqB,EAAA;QAC3C,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KACvC;IAED,IAAI,CAAC,IAAY,EAAE,KAAY,EAAA;QAC3B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC9B;AAEJ;;MCjCY,SAAS,CAAA;AAEV,IAAA,QAAQ,GAAG,IAAI,GAAG,EAA0B,CAAC;IAErD,UAAU,GAAA;QACR,OAAO,OAAwB,CAAC;KACjC;IAED,SAAS,CAAC,IAAY,EAAE,OAAqB,EAAA;QACzC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;KAC5E;IAED,WAAW,CAAC,IAAY,EAAE,OAAqB,EAAA;AAC3C,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;KACtF;IAED,IAAI,CAAC,IAAY,EAAE,KAAY,EAAA;AAC3B,QAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC,IAAG;YACxC,IAAI;gBACA,CAAC,CAAC,KAAK,CAAC,CAAA;AACX,aAAA;AAAC,YAAA,OAAO,CAAC,EAAE;AACR,gBAAA,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AACtD,aAAA;AACL,SAAC,CAAC,CAAA;KACL;AAEJ;;ACZD,SAAS,MAAM,GAAA;IACX,IAAI,CAAC,OAAO,MAAM,CAAC,EAAE,KAAK,WAAW,KAAK,MAAM,CAAC,EAAE,CAAC,SAAS,IAAI,OAAO,MAAM,CAAC,aAAa,KAAK,WAAW,EAAE;AAC1G,QAAA,OAAO,CAAC,IAAI,CAAC,oEAAoE,CAAC,CAAA;QAClF,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,EAAE,CAAC,SAAS,CAAA;AAC7C,KAAA;;AAGD,IAAA,IAAI,OAAO,MAAM,CAAC,aAAa,KAAK,WAAW,EAAE;AAC7C,QAAA,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;AAC5C,KAAA;AAAM,SAAA;AACH,QAAA,OAAO,MAAM,CAAC,aAAa,GAAG,IAAI,SAAS,EAAE,CAAA;AAChD,KAAA;AACL,CAAC;AAED,MAAM,GAAG,GAAG,MAAM,EAAE,CAAA;AAEpB;;;;;AAKG;AACa,SAAA,SAAS,CAAC,IAAY,EAAE,OAAyB,EAAA;AAC7D,IAAA,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;AAChC,CAAC;AAED;;;;;;;AAOG;AACa,SAAA,WAAW,CAAC,IAAY,EAAE,OAAyB,EAAA;AAC/D,IAAA,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;AAClC,CAAC;AAED;;;;;AAKG;AACa,SAAA,IAAI,CAAC,IAAY,EAAE,KAAa,EAAA;AAC5C,IAAA,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;AACzB;;;;"}